{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jack/Desktop/GitProjects/connection-india/UI/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { userContext } from './context/context';\nimport { useState, useEffect } from 'react';\nimport Home from './Routes/Home';\nimport Login from './Routes/Login';\nimport Reg from './Routes/Reg';\nimport Axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { io } from 'socket.io-client';\nimport Peer from 'peerjs';\nconst socket = io('http://localhost:5000/', {\n  extraHeaders: {\n    'SOmte': 'Hello world'\n  },\n  reconnection: false\n});\n\nfunction App() {\n  _s();\n\n  var [token, setToken] = useState(localStorage.getItem('token'));\n  var [user, setUser] = useState('');\n  const [peer, setPeer] = useState({});\n  const [makeSocket, setMakeSocket] = useState(false);\n\n  const handleLogout = async () => {\n    try {\n      let res = await Axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/api/user/logout\",\n        headers: {\n          \"auth\": token\n        }\n      });\n\n      if (res.data.status) {\n        setToken('');\n        setUser('');\n        localStorage.removeItem('token');\n      }\n    } catch (error) {\n      toast(\"Please Connect to internet\", {\n        type: \"error\",\n        position: \"bottom-right\"\n      });\n    }\n  }; // useEffect(()=>{\n  //   (async()=>{\n  //     if(token){\n  //       try {\n  //         let res = await Axios({\n  //           method:\"GET\",\n  //           url:\"http://localhost:5000/api/user/\",\n  //           headers:{\n  //             \"auth\":token\n  //           }\n  //         });\n  //         if(res.data.status){\n  //           setUser(res.data);\n  //           const peer = new Peer(res.data.user?.peerId,{\n  //              path:'/peer',\n  //              host:'localhost',\n  //              port:'5000'\n  //            });\n  //            console.log(peer.id);\n  //            setPeer(peer);\n  //         }else{\n  //           setUser('');\n  //           setToken('');\n  //           localStorage.removeItem('token');\n  //         }\n  //       } catch (error) {\n  //         toast('Please Connect to Internet',{type:\"error\",position:\"bottom-right\"});\n  //       }\n  //     }\n  //   })();\n  // },[token]);\n\n\n  return /*#__PURE__*/_jsxDEV(userContext.Provider, {\n    value: {\n      token,\n      setToken,\n      user,\n      setUser,\n      handleLogout,\n      socket,\n      peer\n    },\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Reg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/home\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/log-nuser\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SVJf7y8mxh+1fTV4XLOzYK3KLbM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jack/Desktop/GitProjects/connection-india/UI/src/App.js"],"names":["Route","Switch","BrowserRouter","Router","userContext","useState","useEffect","Home","Login","Reg","Axios","toast","ToastContainer","io","Peer","socket","extraHeaders","reconnection","App","token","setToken","localStorage","getItem","user","setUser","peer","setPeer","makeSocket","setMakeSocket","handleLogout","res","method","url","headers","data","status","removeItem","error","type","position"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport {Route,Switch,BrowserRouter as Router} from \"react-router-dom\"\nimport {userContext} from './context/context'\nimport { useState,useEffect } from 'react';\nimport Home from './Routes/Home';\nimport Login from './Routes/Login';\nimport Reg from './Routes/Reg';\nimport Axios from 'axios'\nimport { toast, ToastContainer } from 'react-toastify';\nimport {io} from 'socket.io-client'\nimport Peer from 'peerjs';\nconst socket = io('http://localhost:5000/',{\n        extraHeaders:{\n            'SOmte':'Hello world'\n        },\n        reconnection:false\n});\nfunction App() {\n  \n  var [token,setToken] = useState(localStorage.getItem('token'));\n  var [user,setUser] = useState('');\n  const [peer,setPeer] = useState({});\n  const [makeSocket,setMakeSocket] = useState(false);\n  const handleLogout = async () => {\n    try {\n      let res = await Axios({\n        method:\"POST\",\n        url:\"http://localhost:5000/api/user/logout\",\n        headers:{\n          \"auth\":token\n        }\n      });\n      if(res.data.status){\n        \n        setToken('');\n        setUser('');\n        localStorage.removeItem('token');\n      }\n    } catch (error) {\n      toast(\"Please Connect to internet\",{type:\"error\",position:\"bottom-right\"})\n    }\n  }\n  // useEffect(()=>{\n  //   (async()=>{\n  //     if(token){\n  //       try {\n  //         let res = await Axios({\n  //           method:\"GET\",\n  //           url:\"http://localhost:5000/api/user/\",\n  //           headers:{\n  //             \"auth\":token\n  //           }\n  //         });\n          \n  //         if(res.data.status){\n  //           setUser(res.data);\n  //           const peer = new Peer(res.data.user?.peerId,{\n  //              path:'/peer',\n  //              host:'localhost',\n  //              port:'5000'\n  //            });\n  //            console.log(peer.id);\n  //            setPeer(peer);\n  //         }else{\n  //           setUser('');\n  //           setToken('');\n  //           localStorage.removeItem('token');\n  //         }\n  //       } catch (error) {\n  //         toast('Please Connect to Internet',{type:\"error\",position:\"bottom-right\"});\n  //       }\n  //     }\n  //   })();\n  // },[token]);\n  return (\n    <userContext.Provider value = {{token,setToken,user,setUser,handleLogout,socket,peer}}>\n      <ToastContainer />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Reg} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/log-nuser\" component={Login} />\n        </Switch>\n      </Router>\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}