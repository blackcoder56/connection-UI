{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jack/Desktop/GitProjects/connection-india/UI/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { userContext } from './context/context';\nimport { useState, useEffect } from 'react';\nimport Home from './Routes/Home';\nimport Login from './Routes/Login';\nimport Reg from './Routes/Reg';\nimport Axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { io } from 'socket.io-client';\nimport Peer from 'peerjs';\n\nfunction App() {\n  _s();\n\n  const socket = io('http://localhost:5000/', {\n    extraHeaders: {\n      'SOmte': 'Hello world'\n    },\n    reconnection: false\n  });\n  socket.on('hello', msg => {\n    console.log(msg);\n  });\n\n  const tryReconnect = () => {\n    setTimeout(() => {\n      socket.io.open(err => {\n        if (err) tryReconnect();\n      });\n    }, 2000);\n  };\n\n  socket.io.on('close', tryReconnect);\n  var [token, setToken] = useState(localStorage.getItem('token'));\n  var [user, setUser] = useState('');\n  const [peer, setPeer] = useState({});\n\n  const handleLogout = async () => {\n    try {\n      let res = await Axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/api/user/logout\",\n        headers: {\n          \"auth\": token\n        }\n      });\n\n      if (res.data.status) {\n        setToken('');\n        setUser('');\n        localStorage.removeItem('token');\n      }\n    } catch (error) {\n      toast(\"Please Connect to internet\", {\n        type: \"error\",\n        position: \"bottom-right\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (token) {\n        try {\n          let res = await Axios({\n            method: \"GET\",\n            url: \"http://localhost:5000/api/user/\",\n            headers: {\n              \"auth\": token\n            }\n          });\n\n          if (res.data.status) {\n            var _res$data$user;\n\n            setUser(res.data);\n            const peer = new Peer((_res$data$user = res.data.user) === null || _res$data$user === void 0 ? void 0 : _res$data$user.peerId, {\n              path: '/peer',\n              host: 'localhost',\n              port: '5000'\n            });\n            console.log(peer.id);\n            setPeer(peer);\n          } else {\n            setUser('');\n            setToken('');\n            localStorage.removeItem('token');\n          }\n        } catch (error) {\n          toast('Please Connect to Internet', {\n            type: \"error\",\n            position: \"bottom-right\"\n          });\n        }\n      }\n    })();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(userContext.Provider, {\n    value: {\n      token,\n      setToken,\n      user,\n      setUser,\n      handleLogout,\n      socket,\n      peer\n    },\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Reg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/home\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/log-nuser\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"C79O3hIMi0qEtHruGDA+KCEnff4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jack/Desktop/GitProjects/connection-india/UI/src/App.js"],"names":["Route","Switch","BrowserRouter","Router","userContext","useState","useEffect","Home","Login","Reg","Axios","toast","ToastContainer","io","Peer","App","socket","extraHeaders","reconnection","on","msg","console","log","tryReconnect","setTimeout","open","err","token","setToken","localStorage","getItem","user","setUser","peer","setPeer","handleLogout","res","method","url","headers","data","status","removeItem","error","type","position","peerId","path","host","port","id"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport {Route,Switch,BrowserRouter as Router} from \"react-router-dom\"\nimport {userContext} from './context/context'\nimport { useState,useEffect } from 'react';\nimport Home from './Routes/Home';\nimport Login from './Routes/Login';\nimport Reg from './Routes/Reg';\nimport Axios from 'axios'\nimport { toast, ToastContainer } from 'react-toastify';\nimport {io} from 'socket.io-client'\nimport Peer from 'peerjs';\nfunction App() {\n  \n  const socket = io('http://localhost:5000/',{\n        extraHeaders:{\n            'SOmte':'Hello world'\n        },\n        reconnection:false\n  });\n  socket.on('hello',(msg)=>{\n    console.log(msg)\n  })\n  const tryReconnect = () => {\n    setTimeout(()=>{\n      socket.io.open((err)=>{\n        if(err) tryReconnect();\n      });\n    },2000)\n  }\n  socket.io.on('close',tryReconnect);\n\n  var [token,setToken] = useState(localStorage.getItem('token'));\n  var [user,setUser] = useState('');\n  const [peer,setPeer] = useState({});\n  const handleLogout = async () => {\n    try {\n      let res = await Axios({\n        method:\"POST\",\n        url:\"http://localhost:5000/api/user/logout\",\n        headers:{\n          \"auth\":token\n        }\n      });\n      if(res.data.status){\n        \n        setToken('');\n        setUser('');\n        localStorage.removeItem('token');\n      }\n    } catch (error) {\n      toast(\"Please Connect to internet\",{type:\"error\",position:\"bottom-right\"})\n    }\n  }\n  useEffect(()=>{\n    (async()=>{\n      if(token){\n        try {\n          let res = await Axios({\n            method:\"GET\",\n            url:\"http://localhost:5000/api/user/\",\n            headers:{\n              \"auth\":token\n            }\n          });\n          \n          if(res.data.status){\n            setUser(res.data);\n            const peer = new Peer(res.data.user?.peerId,{\n               path:'/peer',\n               host:'localhost',\n               port:'5000'\n             });\n             console.log(peer.id);\n             setPeer(peer);\n          }else{\n            setUser('');\n            setToken('');\n            localStorage.removeItem('token');\n          }\n        } catch (error) {\n          toast('Please Connect to Internet',{type:\"error\",position:\"bottom-right\"});\n        }\n      }\n    })();\n  },[token]);\n  return (\n    <userContext.Provider value = {{token,setToken,user,setUser,handleLogout,socket,peer}}>\n      <ToastContainer />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Reg} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/log-nuser\" component={Login} />\n        </Switch>\n      </Router>\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}