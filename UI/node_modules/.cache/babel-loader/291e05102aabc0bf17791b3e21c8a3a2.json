{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jack/Desktop/GitProjects/connection-india/UI/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { userContext } from './context/context';\nimport { useState, useEffect } from 'react';\nimport Home from './Routes/Home';\nimport Login from './Routes/Login';\nimport Reg from './Routes/Reg';\nimport Axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { io } from 'socket.io-client';\nimport Peer from 'peerjs';\n\nfunction App() {\n  _s();\n\n  var [token, setToken] = useState(localStorage.getItem('token'));\n  var [user, setUser] = useState('');\n  const [peer, setPeer] = useState({});\n  const [socket, setSocket] = useState({});\n\n  const handleLogout = async () => {\n    try {\n      let res = await Axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/api/user/logout\",\n        headers: {\n          \"auth\": token\n        }\n      });\n\n      if (res.data.status) {\n        setToken('');\n        setUser('');\n        localStorage.removeItem('token');\n      }\n    } catch (error) {\n      toast(\"Please Connect to internet\", {\n        type: \"error\",\n        position: \"bottom-right\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (token) {\n        try {\n          let res = await Axios({\n            method: \"GET\",\n            url: \"http://localhost:5000/api/user/\",\n            headers: {\n              \"auth\": token\n            }\n          });\n\n          if (res.data.status) {\n            var _res$data$user;\n\n            setUser(res.data);\n            const socket = io('http://localhost:5000/', {\n              extraHeaders: {\n                'SOmte': 'Hello world'\n              }\n            });\n            const peer = new Peer((_res$data$user = res.data.user) === null || _res$data$user === void 0 ? void 0 : _res$data$user.peerId, {\n              path: '/peer',\n              host: 'localhost',\n              port: '5000'\n            });\n            setPeer(peer);\n            setSocket(socket);\n          } else {\n            setUser('');\n            setToken('');\n            localStorage.removeItem('token');\n          }\n        } catch (error) {\n          toast('Please Connect to Internet', {\n            type: \"error\",\n            position: \"bottom-right\"\n          });\n        }\n      }\n    })();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(userContext.Provider, {\n    value: {\n      token,\n      setToken,\n      user,\n      setUser,\n      handleLogout,\n      socket,\n      peer\n    },\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Reg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/home\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/log-nuser\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1I/1D1+bbRVMpkxmAhuaYdiCgb0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jack/Desktop/GitProjects/connection-india/UI/src/App.js"],"names":["Route","Switch","BrowserRouter","Router","userContext","useState","useEffect","Home","Login","Reg","Axios","toast","ToastContainer","io","Peer","App","token","setToken","localStorage","getItem","user","setUser","peer","setPeer","socket","setSocket","handleLogout","res","method","url","headers","data","status","removeItem","error","type","position","extraHeaders","peerId","path","host","port"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\"\nimport { userContext } from './context/context'\nimport { useState, useEffect } from 'react';\nimport Home from './Routes/Home';\nimport Login from './Routes/Login';\nimport Reg from './Routes/Reg';\nimport Axios from 'axios'\nimport { toast, ToastContainer } from 'react-toastify';\nimport { io } from 'socket.io-client'\nimport Peer from 'peerjs';\nfunction App() {\n\n\n  var [token, setToken] = useState(localStorage.getItem('token'));\n  var [user, setUser] = useState('');\n  const [peer, setPeer] = useState({});\n  const [socket, setSocket] = useState({});\n  const handleLogout = async () => {\n    try {\n      let res = await Axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/api/user/logout\",\n        headers: {\n          \"auth\": token\n        }\n      });\n      if (res.data.status) {\n\n        setToken('');\n        setUser('');\n        localStorage.removeItem('token');\n      }\n    } catch (error) {\n      toast(\"Please Connect to internet\", { type: \"error\", position: \"bottom-right\" })\n    }\n  }\n  useEffect(() => {\n    (async () => {\n      if (token) {\n        try {\n          let res = await Axios({\n            method: \"GET\",\n            url: \"http://localhost:5000/api/user/\",\n            headers: {\n              \"auth\": token\n            }\n          });\n\n          if (res.data.status) {\n            setUser(res.data);\n            const socket = io('http://localhost:5000/', {\n              extraHeaders: {\n                'SOmte': 'Hello world'\n              }\n            });\n            const peer = new Peer(res.data.user?.peerId, {\n              path: '/peer',\n              host: 'localhost',\n              port: '5000'\n            });\n            setPeer(peer);\n            setSocket(socket);\n          } else {\n            setUser('');\n            setToken('');\n            localStorage.removeItem('token');\n          }\n        } catch (error) {\n          toast('Please Connect to Internet', { type: \"error\", position: \"bottom-right\" });\n        }\n      }\n    })();\n  }, [token]);\n  return (\n    <userContext.Provider value={{ token, setToken, user, setUser, handleLogout, socket, peer }}>\n      <ToastContainer />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Reg} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/log-nuser\" component={Login} />\n        </Switch>\n      </Router>\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}