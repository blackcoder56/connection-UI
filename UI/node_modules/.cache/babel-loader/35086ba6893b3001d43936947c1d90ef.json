{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/home/jack/Desktop/GitProjects/connection-india/UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/jack/Desktop/GitProjects/connection-india/UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/jack/Desktop/GitProjects/connection-india/UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import{Route,Switch,BrowserRouter as Router}from\"react-router-dom\";import{userContext}from'./context/context';import{useState,useEffect}from'react';import Home from'./Routes/Home';import Login from'./Routes/Login';import Reg from'./Routes/Reg';import Axios from'axios';import{toast,ToastContainer}from'react-toastify';import{io}from'socket.io-client';import Peer from'peerjs';function App(){var socket=io('http://localhost:5000/',{extraHeaders:{'SOmte':'Hello world'},reconnection:false});// const tryReconnect = () => {\n//   setTimeout(()=>{\n//     socket.io.open((err)=>{\n//       if(err) tryReconnect();\n//     });\n//   },2000)\n// }\n// socket.io.on('close',tryReconnect);\nvar _useState=useState(localStorage.getItem('token')),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),user=_useState4[0],setUser=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),peer=_useState6[0],setPeer=_useState6[1];var handleLogout=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Axios({method:\"POST\",url:\"http://localhost:5000/api/user/logout\",headers:{\"auth\":token}});case 3:res=_context.sent;if(res.data.status){setToken('');setUser('');localStorage.removeItem('token');}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);toast(\"Please Connect to internet\",{type:\"error\",position:\"bottom-right\"});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function handleLogout(){return _ref.apply(this,arguments);};}();useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,_res$data$user,_peer;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!token){_context2.next=11;break;}_context2.prev=1;_context2.next=4;return Axios({method:\"GET\",url:\"http://localhost:5000/api/user/\",headers:{\"auth\":token}});case 4:res=_context2.sent;if(res.data.status){setUser(res.data);_peer=new Peer((_res$data$user=res.data.user)===null||_res$data$user===void 0?void 0:_res$data$user.peerId,{path:'/peer',host:'localhost',port:'5000'});console.log(_peer.id);setPeer(_peer);}else{setUser('');setToken('');localStorage.removeItem('token');}_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);toast('Please Connect to Internet',{type:\"error\",position:\"bottom-right\"});case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}))();},[token]);return/*#__PURE__*/_jsxs(userContext.Provider,{value:{token:token,setToken:setToken,user:user,setUser:setUser,handleLogout:handleLogout,socket:socket,peer:peer},children:[/*#__PURE__*/_jsx(ToastContainer,{}),/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:Reg}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/home\",component:Home}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/log-nuser\",component:Login})]})})]});}export default App;","map":{"version":3,"sources":["/home/jack/Desktop/GitProjects/connection-india/UI/src/App.js"],"names":["Route","Switch","BrowserRouter","Router","userContext","useState","useEffect","Home","Login","Reg","Axios","toast","ToastContainer","io","Peer","App","socket","extraHeaders","reconnection","localStorage","getItem","token","setToken","user","setUser","peer","setPeer","handleLogout","method","url","headers","res","data","status","removeItem","type","position","peerId","path","host","port","console","log","id"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport {Route,Switch,BrowserRouter as Router} from \"react-router-dom\"\nimport {userContext} from './context/context'\nimport { useState,useEffect } from 'react';\nimport Home from './Routes/Home';\nimport Login from './Routes/Login';\nimport Reg from './Routes/Reg';\nimport Axios from 'axios'\nimport { toast, ToastContainer } from 'react-toastify';\nimport {io} from 'socket.io-client'\nimport Peer from 'peerjs';\nfunction App() {\n  \n  const socket = io('http://localhost:5000/',{\n        extraHeaders:{\n            'SOmte':'Hello world'\n        },\n        reconnection:false\n  });\n  // const tryReconnect = () => {\n  //   setTimeout(()=>{\n  //     socket.io.open((err)=>{\n  //       if(err) tryReconnect();\n  //     });\n  //   },2000)\n  // }\n  // socket.io.on('close',tryReconnect);\n\n  var [token,setToken] = useState(localStorage.getItem('token'));\n  var [user,setUser] = useState('');\n  const [peer,setPeer] = useState({});\n  const handleLogout = async () => {\n    try {\n      let res = await Axios({\n        method:\"POST\",\n        url:\"http://localhost:5000/api/user/logout\",\n        headers:{\n          \"auth\":token\n        }\n      });\n      if(res.data.status){\n        \n        setToken('');\n        setUser('');\n        localStorage.removeItem('token');\n      }\n    } catch (error) {\n      toast(\"Please Connect to internet\",{type:\"error\",position:\"bottom-right\"})\n    }\n  }\n  useEffect(()=>{\n    (async()=>{\n      if(token){\n        try {\n          let res = await Axios({\n            method:\"GET\",\n            url:\"http://localhost:5000/api/user/\",\n            headers:{\n              \"auth\":token\n            }\n          });\n          \n          if(res.data.status){\n            setUser(res.data);\n            const peer = new Peer(res.data.user?.peerId,{\n               path:'/peer',\n               host:'localhost',\n               port:'5000'\n             });\n             console.log(peer.id);\n             setPeer(peer);\n          }else{\n            setUser('');\n            setToken('');\n            localStorage.removeItem('token');\n          }\n        } catch (error) {\n          toast('Please Connect to Internet',{type:\"error\",position:\"bottom-right\"});\n        }\n      }\n    })();\n  },[token]);\n  return (\n    <userContext.Provider value = {{token,setToken,user,setUser,handleLogout,socket,peer}}>\n      <ToastContainer />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Reg} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/log-nuser\" component={Login} />\n        </Switch>\n      </Router>\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}